---
# vm's in progress
- name: Provision neo4j cluster
  hosts: localhost

  tasks:
  - name: Create Core Node VMs
    azure.azcollection.azure_rm_virtualmachine:
      resource_group: "{{ RESOURCE_GROUP }}"
      name: "{{ item.vmname }}"
      vm_size: Standard_DS1_v2
      zones: "{{ item.zone }}"
      network_interface_names: ["{{ item.pub_nic }}", "{{ item.int_nic }}"]
      managed_disk_type: Standard_LRS
      os_disk_size_gb: 30  # Min 30 gb for ubuntu vm image is required
      os_disk_caching: ReadWrite
      admin_username: azureuser
      subnet_name: "{{ CLUSTER_SUBNET_NAME }}"
      ssh_password_enabled: false
      ssh_public_keys:
        - path: /home/azureuser/.ssh/authorized_keys
          key_data: "{{ KEY_DATA }}"
      image:
        offer: 0001-com-ubuntu-server-focal
        publisher: Canonical
        sku: '20_04-lts'
        version: latest
      tags:
        applicationRole: corenode
    with_items:
      - {vmname: 'core1', zone: [1], pub_nic: 'core1_pub', int_nic: 'core1_int'}
      - {vmname: 'core2', zone: [2], pub_nic: 'core2_pub', int_nic: 'core2_int'}
      - {vmname: 'core3', zone: [3], pub_nic: 'core3_pub', int_nic: 'core3_int'}
      - {vmname: 'core4', zone: [1], pub_nic: 'core4_pub', int_nic: 'core4_int'}
      - {vmname: 'core5', zone: [2], pub_nic: 'core5_pub', int_nic: 'core5_int'}

  - name: Create Backend VMs
    azure.azcollection.azure_rm_virtualmachine:
      resource_group: "{{ RESOURCE_GROUP }}"
      name: "{{ item.vmname }}"
      vm_size: Standard_DS1_v2
      zones: "{{ item.zone }}"
      managed_disk_type: Standard_LRS
      os_disk_size_gb: 30  # Min 30 gb for ubuntu vm image is required
      os_disk_caching: ReadWrite
      admin_username: azureuser
      subnet_name: "{{ BACKEND_SUBNET_NAME }}"
      ssh_password_enabled: false
      ssh_public_keys:
        - path: /home/azureuser/.ssh/authorized_keys
          key_data: "{{ KEY_DATA }}"
      image:
        offer: 0001-com-ubuntu-server-focal
        publisher: Canonical
        sku: '20_04-lts'
        version: latest
      tags:
        applicationRole: backend
    with_items:
      - {vmname: 'backend', zone: [1]}
