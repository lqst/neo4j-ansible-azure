---
- name: Install java
  apt:
    name: openjdk-17-jre-headless
    state: present
    cache_valid_time: 604800 # one week
  become: yes

#- name: Neo4j apt key
#  apt_key:
#    url: https://debian.neo4j.com/neotechnology.gpg.key
#  become: yes

#- name: Neo4j repo
#  apt_repository:
#    repo: deb https://debian.neo4j.com stable 4.4
#  become: yes
#  notify:
#    - restart neo4j

# - name: Neo4j stopped
#   ansible.builtin.service:
#     name: neo4j
#     state: stopped
#   become: yes
# 
# - name: Purge data directory
#   ansible.builtin.file:
#     path: /var/lib/neo4j/data
#     state: absent
#   become: yes
#   notify:
#     - restart neo4j

- name: Neo4j-enterprise debconf
  ansible.builtin.debconf:
    name: neo4j-enterprise
    question: neo4j/question
    value: 'I ACCEPT'
    vtype: select
  become: yes

- name: Make sure dist directory exists
  ansible.builtin.file:
    path: /dist
    state: directory
  become: yes

- name: Copy cypher shell deb package
  ansible.builtin.copy:
    src: cypher-shell_5.0.0_drop05.0_all.deb
    dest: /dist/cypher-shell_5.0.0_drop05.0_all.deb
    owner: root
    group: root
  become: yes

- name: Copy neo4j deb package
  ansible.builtin.copy:
    src: neo4j-enterprise_5.0.0_dev_all_18426.deb
    dest: /dist/neo4j-enterprise_5.0.0_dev_all_18426.deb
    owner: root
    group: root
  become: yes


- name: cypher shell
  apt:
    state: present
    deb: /dist/cypher-shell_5.0.0_drop05.0_all.deb
  become: yes
  notify:
    - restart neo4j

- name: Neo4j-enterprise
  apt:
    state: present
    deb: /dist/neo4j-enterprise_5.0.0_dev_all_18426.deb
  become: yes
  notify:
    - restart neo4j

- name: Neo4j config
  ansible.builtin.template:
    src: neo4j.conf.j2
    dest: /etc/neo4j/neo4j.conf
    owner: neo4j
    group: root
  vars:
    external_advertised_address: "{{ hostvars[inventory_hostname]['computer_name'] }}.{{ CLUSTER_DNS_NAME }}"
    host_name: "{{ hostvars[inventory_hostname]['computer_name'] }}"
    initial_discovery_members: "{% for host in groups['tag_applicationRole_corenode'] -%} {{ hostvars[host]['private_ipv4_addresses'][1]}}:5000{% if not loop.last %},{% endif %}{%- endfor %}"
    pub_nic: "{{ hostvars[inventory_hostname]['private_ipv4_addresses'][0] }}"
    int_nic: "{{ hostvars[inventory_hostname]['private_ipv4_addresses'][1] }}"
  become: yes
  notify:
    - restart neo4j
  tags: neo4j_conf

- name: DNS registration
  azure.azcollection.azure_rm_privatednsrecordset:
    resource_group: "{{ RESOURCE_GROUP }}"
    zone_name: "{{ CLUSTER_DNS_NAME  }}"
    relative_name: "{{ hostvars[inventory_hostname]['computer_name'] }}"
    record_type: A
    records:
      - entry: "{{ hostvars[inventory_hostname]['private_ipv4_addresses'][0] }}"
  delegate_to: localhost

- name: Make sure backup directory exists
  ansible.builtin.file:
    path: /backup
    state: directory
    owner: neo4j
    group: neo4j
  become: yes
  tags: backups
  
- name: Copy movie backup to server
  ansible.builtin.copy:
    src: movies.backup
    dest: /backup/movies.backup
    owner: neo4j
    group: neo4j
  become: yes
  tags: backups
